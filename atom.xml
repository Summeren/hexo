<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Apple</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.xueni.ren/"/>
  <updated>2018-12-09T07:08:41.668Z</updated>
  <id>http://blog.xueni.ren/</id>
  
  <author>
    <name>Apple</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Go 语言学习笔记</title>
    <link href="http://blog.xueni.ren/2018/11/07/Learning-Go/"/>
    <id>http://blog.xueni.ren/2018/11/07/Learning-Go/</id>
    <published>2018-11-07T13:30:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初识-Go-语言"><a href="#初识-Go-语言" class="headerlink" title="初识 Go 语言"></a>初识 Go 语言</h1><p>  Go （又称 Golang）是 Google 开发的一种静态强类型、编译型、并发型，并具有垃圾回收功能的编程语言。</p><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ul><li>2007 年 9 月开始设计，2009 年 11 月正式宣布推出，成为开源项目，并在 Linux 及 Mac OS X 平台上进行了实现，后来追加了 Windows 系统下的实现。</li><li>2006 年，Go 被软件评价公司 TIOBE 选为 “TIOBE 2016 年最佳语言”。</li><li>目前，Go 每半年发布一个二级版本（即从 a.x 升级到 a.y）<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><a href="https://golang.google.cn/" target="_blank" rel="noopener">https://golang.google.cn/</a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1>下载地址：<a href="https://dl.google.com/go/go1.11.2.darwin-amd64.pkg" target="_blank" rel="noopener">https://dl.google.com/go/go1.11.2.darwin-amd64.pkg</a><br>双击安装即可，默认安装路径 <strong>/usr/local</strong><h1 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ echo &quot;export PATH=/usr/local/go/bin:$PATH&quot; &gt;&gt; .bashrc</span><br><span class="line">➜  ~ echo &quot;export GOPATH=/Users/renxueni/go&quot; &gt;&gt; .bashrc</span><br><span class="line">➜  ~ echo &quot;export GOBIN=$GOPATH/bin&quot; &gt;&gt; .bashrc</span><br><span class="line">➜  ~ source .bashrc</span><br></pre></td></tr></table></figure></li></ul><h1 id="输出环境变量，验证是否生效"><a href="#输出环境变量，验证是否生效" class="headerlink" title="输出环境变量，验证是否生效"></a>输出环境变量，验证是否生效</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ go env</span><br><span class="line">GOARCH=&quot;amd64&quot;</span><br><span class="line">GOBIN=&quot;/bin&quot;</span><br><span class="line">GOCACHE=&quot;/Users/renxueni/Library/Caches/go-build&quot;</span><br><span class="line">GOEXE=&quot;&quot;</span><br><span class="line">GOFLAGS=&quot;&quot;</span><br><span class="line">GOHOSTARCH=&quot;amd64&quot;</span><br><span class="line">GOHOSTOS=&quot;darwin&quot;</span><br><span class="line">GOOS=&quot;darwin&quot;</span><br><span class="line">GOPATH=&quot;/Users/renxueni/go&quot;</span><br><span class="line">GOPROXY=&quot;&quot;</span><br><span class="line">GORACE=&quot;&quot;</span><br><span class="line">GOROOT=&quot;/usr/local/go&quot;</span><br><span class="line">GOTMPDIR=&quot;&quot;</span><br><span class="line">GOTOOLDIR=&quot;/usr/local/go/pkg/tool/darwin_amd64&quot;</span><br><span class="line">GCCGO=&quot;gccgo&quot;</span><br><span class="line">CC=&quot;clang&quot;</span><br><span class="line">CXX=&quot;clang++&quot;</span><br><span class="line">CGO_ENABLED=&quot;1&quot;</span><br><span class="line">GOMOD=&quot;&quot;</span><br><span class="line">CGO_CFLAGS=&quot;-g -O2&quot;</span><br><span class="line">CGO_CPPFLAGS=&quot;&quot;</span><br><span class="line">CGO_CXXFLAGS=&quot;-g -O2&quot;</span><br><span class="line">CGO_FFLAGS=&quot;-g -O2&quot;</span><br><span class="line">CGO_LDFLAGS=&quot;-g -O2&quot;</span><br><span class="line">PKG_CONFIG=&quot;pkg-config&quot;</span><br><span class="line">GOGCCFLAGS=&quot;-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/yk/mrccz_t93_g4z75b19cbxbch0000gn/T/go-build525537248=/tmp/go-build -gno-record-gcc-switches -fno-common&quot;</span><br></pre></td></tr></table></figure><h1 id="进入工作空间源码目录"><a href="#进入工作空间源码目录" class="headerlink" title="进入工作空间源码目录"></a>进入工作空间源码目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ cd /Users/renxueni/go/src</span><br></pre></td></tr></table></figure><h1 id="创建测试包目录"><a href="#创建测试包目录" class="headerlink" title="创建测试包目录"></a>创建测试包目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  src mkdir demo</span><br><span class="line">➜  src cd demo</span><br><span class="line">➜  demo</span><br></pre></td></tr></table></figure><h1 id="创建测试源码"><a href="#创建测试源码" class="headerlink" title="创建测试源码"></a>创建测试源码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜  demo cat &gt; hello.go &lt;&lt; end</span><br><span class="line">heredoc&gt; package main</span><br><span class="line">heredoc&gt; </span><br><span class="line">heredoc&gt; func main()&#123; </span><br><span class="line">heredoc&gt;        println(&quot;Hello World!&quot;)</span><br><span class="line">heredoc&gt; &#125;</span><br><span class="line">heredoc&gt; end</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  demo go run hello.go</span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Go 语言学习笔记
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.xueni.ren/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Go" scheme="http://blog.xueni.ren/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>XStream 之 JavaBean 与 XML 相互转换</title>
    <link href="http://blog.xueni.ren/2017/04/07/XStream/"/>
    <id>http://blog.xueni.ren/2017/04/07/XStream/</id>
    <published>2017-04-07T14:22:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近重构老项目，接口返回值为 xml 。不想使用老项目中的方式，遂 google 下，试图寻找一个现成的 JavaBean 与 XML 相互转换的工具。于是就与 XStream 邂逅<br>了。使用之初，也发现了不少问题，于是有了此篇记录。</p><h1 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h1><p>maven 引入非常方便，只需要在 <em>pom.xml</em> 引入如下代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.thoughtworks.xstream<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xstream<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不是 maven 工程的需要自行导图 jar 包，<em>xstream-1.4.9.jar</em> (其他版本也是可以的，1.4.9 目前是最新版本)</p><p>#简单的 JavaBean 转 XML</p><p>稍后继续，要开始干活了，半夜压测。。。。。。。。。。。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近重构老项目，接口返回值为 xml 。不想使用老项目中的方式，遂 google 下，试图寻找一个现成的 JavaBean 与 XML 相互
      
    
    </summary>
    
      <category term="工具代码" scheme="http://blog.xueni.ren/categories/%E5%B7%A5%E5%85%B7%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="java" scheme="http://blog.xueni.ren/tags/java/"/>
    
      <category term="xml" scheme="http://blog.xueni.ren/tags/xml/"/>
    
      <category term="xStream" scheme="http://blog.xueni.ren/tags/xStream/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat JDBC Pool 多数据源配置</title>
    <link href="http://blog.xueni.ren/2017/01/04/double-data-source/"/>
    <id>http://blog.xueni.ren/2017/01/04/double-data-source/</id>
    <published>2017-01-04T13:30:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>多数据源配置示例</p><a id="more"></a><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 数据库配置信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:conf/db.properties"</span> <span class="attr">ignore-unresolvable</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- ================================Tomcat JDBC Pool数据源配置（写）================================================= --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSourceW"</span> <span class="attr">class</span>=<span class="string">"org.apache.tomcat.jdbc.pool.DataSource"</span> <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"poolProperties"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.apache.tomcat.jdbc.pool.PoolProperties"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.driverClassName&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.url&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.username&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.password&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jmxEnabled"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.jmxEnabled&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnBorrow"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.testOnBorrow&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testWhileIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.testWhileIdle&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnReturn"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.testOnReturn&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"validationInterval"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.validationInterval&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"validationQuery"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.validationQuery&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"timeBetweenEvictionRunsMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.timeBetweenEvictionRunsMillis&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.initialSize&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.maxActive&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.maxIdle&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.minIdle&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxWait"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.maxWait&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minEvictableIdleTimeMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.minEvictableIdleTimeMillis&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logAbandoned"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.logAbandoned&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"removeAbandoned"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.removeAbandoned&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"removeAbandonedTimeout"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.removeAbandonedTimeout&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcInterceptors"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_w.jdbcInterceptors&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ================================Tomcat JDBC Pool数据源配置（读）================================================= --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSourceR"</span> <span class="attr">class</span>=<span class="string">"org.apache.tomcat.jdbc.pool.DataSource"</span> <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"poolProperties"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.apache.tomcat.jdbc.pool.PoolProperties"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.driverClassName&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.url&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.username&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.password&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jmxEnabled"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.jmxEnabled&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnBorrow"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.testOnBorrow&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testWhileIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.testWhileIdle&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnReturn"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.testOnReturn&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"validationInterval"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.validationInterval&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"validationQuery"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.validationQuery&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"timeBetweenEvictionRunsMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.timeBetweenEvictionRunsMillis&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.initialSize&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.maxActive&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.maxIdle&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.minIdle&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxWait"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.maxWait&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minEvictableIdleTimeMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.minEvictableIdleTimeMillis&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logAbandoned"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.logAbandoned&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"removeAbandoned"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.removeAbandoned&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"removeAbandonedTimeout"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.removeAbandonedTimeout&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcInterceptors"</span> <span class="attr">value</span>=<span class="string">"$&#123;db_r.jdbcInterceptors&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Mybatis链接工厂 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactoryW"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span> <span class="attr">p:dataSource-ref</span>=<span class="string">"dataSourceW"</span> <span class="attr">p:configLocation</span>=<span class="string">"classpath:mybatis/configuration.xml"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactoryR"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span> <span class="attr">p:dataSource-ref</span>=<span class="string">"dataSourceR"</span> <span class="attr">p:configLocation</span>=<span class="string">"classpath:mybatis/configuration.xml"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionTemplateW"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionTemplate"</span> <span class="attr">c:sqlSessionFactory-ref</span>=<span class="string">"sqlSessionFactoryW"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionTemplateR"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionTemplate"</span> <span class="attr">c:sqlSessionFactory-ref</span>=<span class="string">"sqlSessionFactoryR"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="db-properties"><a href="#db-properties" class="headerlink" title="db.properties"></a>db.properties</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#---------------------Write---------------------------------</span><br><span class="line">db_w.driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">db_w.url=jdbc:mysql://127.0.01:3306/address_shipping</span><br><span class="line">db_w.username=root</span><br><span class="line">db_w.password=root</span><br><span class="line">db_w.jmxEnabled=true</span><br><span class="line">db_w.testOnBorrow=false</span><br><span class="line">db_w.testWhileIdle=true</span><br><span class="line">db_w.testOnReturn=false</span><br><span class="line">db_w.validationInterval=30000</span><br><span class="line">db_w.validationQuery=select 1</span><br><span class="line">db_w.timeBetweenEvictionRunsMillis=30000</span><br><span class="line">db_w.initialSize=5</span><br><span class="line">db_w.maxActive=20</span><br><span class="line">db_w.maxIdle=5</span><br><span class="line">db_w.minIdle=5</span><br><span class="line">db_w.maxWait=30000</span><br><span class="line">db_w.minEvictableIdleTimeMillis=30000</span><br><span class="line">db_w.logAbandoned=false</span><br><span class="line">db_w.removeAbandoned=true</span><br><span class="line">db_w.removeAbandonedTimeout=60</span><br><span class="line">db_w.jdbcInterceptors=org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer</span><br><span class="line">#---------------------Read---------------------------------</span><br><span class="line">db_r.driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">db_r.url=jdbc:mysql://127.0.01:3306/address_shipping</span><br><span class="line">db_r.username=root</span><br><span class="line">db_r.password=root</span><br><span class="line">db_r.jmxEnabled=true</span><br><span class="line">db_r.testOnBorrow=false</span><br><span class="line">db_r.testWhileIdle=true</span><br><span class="line">db_r.testOnReturn=false</span><br><span class="line">db_r.validationInterval=30000</span><br><span class="line">db_r.validationQuery=select 1</span><br><span class="line">db_r.timeBetweenEvictionRunsMillis=30000</span><br><span class="line">db_r.initialSize=5</span><br><span class="line">db_r.maxActive=20</span><br><span class="line">db_r.maxIdle=5</span><br><span class="line">db_r.minIdle=5</span><br><span class="line">db_r.maxWait=30000</span><br><span class="line">db_r.minEvictableIdleTimeMillis=30000</span><br><span class="line">db_r.logAbandoned=false</span><br><span class="line">db_r.removeAbandoned=true</span><br><span class="line">db_r.removeAbandonedTimeout=60</span><br><span class="line">db_r.jdbcInterceptors=org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer</span><br></pre></td></tr></table></figure><p>以上，备忘录。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;多数据源配置示例&lt;/p&gt;
    
    </summary>
    
      <category term="Java 编程" scheme="http://blog.xueni.ren/categories/Java-%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="JDBC" scheme="http://blog.xueni.ren/tags/JDBC/"/>
    
  </entry>
  
  <entry>
    <title>TRUNCATE 和 DELETE 的区别</title>
    <link href="http://blog.xueni.ren/2016/11/14/MySQL-truncate-delete/"/>
    <id>http://blog.xueni.ren/2016/11/14/MySQL-truncate-delete/</id>
    <published>2016-11-14T14:15:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  工作中有这么一个业务场景，数据库里的数据需要定时全量删除。<br>  全量删除数据有两个选择，<br>  1：<code>DELETE FROM table_name</code><br>  2:<code>TRUNCATE TABLE table_name</code>。<br>由于 <strong>TRUNCATE TABLE</strong> 相当于不带 <strong>WHERE</strong> 条件的 <strong>DELETE</strong> 语句，那么不论是选择 <strong>DELETE</strong> 还是选择 <strong>TRUNCATE TABLE</strong> 好像都能达到我删除全量数据的目的。<br><a id="more"></a></p><h2 id="DELETE-语法"><a href="#DELETE-语法" class="headerlink" title="DELETE 语法"></a>DELETE 语法</h2><p><strong>DELETE</strong> 语句大家都熟悉，语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 单表操作 --&gt;</span><br><span class="line"><span class="keyword">DELETE</span> [<span class="keyword">LOW_PRIORITY</span>] [<span class="keyword">QUICK</span>] [<span class="keyword">IGNORE</span>] <span class="keyword">FROM</span> tbl_name</span><br><span class="line">    [<span class="keyword">PARTITION</span> (partition_name,...)]</span><br><span class="line">    [<span class="keyword">WHERE</span> where_condition]</span><br><span class="line">    [<span class="keyword">ORDER</span> <span class="keyword">BY</span> ...]</span><br><span class="line">    [<span class="keyword">LIMIT</span> <span class="keyword">row_count</span>]</span><br><span class="line">    </span><br><span class="line">&lt;!<span class="comment">-- 多表操作1 --&gt;</span></span><br><span class="line"><span class="keyword">DELETE</span> [<span class="keyword">LOW_PRIORITY</span>] [<span class="keyword">QUICK</span>] [<span class="keyword">IGNORE</span>]</span><br><span class="line">    tbl_name[.*] [, tbl_name[.*]] ...</span><br><span class="line">    <span class="keyword">FROM</span> table_references</span><br><span class="line">    [<span class="keyword">WHERE</span> where_condition]</span><br><span class="line">    </span><br><span class="line">&lt;!<span class="comment">-- 多表操作2 --&gt;</span></span><br><span class="line"><span class="keyword">DELETE</span> [<span class="keyword">LOW_PRIORITY</span>] [<span class="keyword">QUICK</span>] [<span class="keyword">IGNORE</span>]</span><br><span class="line">    <span class="keyword">FROM</span> tbl_name[.*] [, tbl_name[.*]] ...</span><br><span class="line">    <span class="keyword">USING</span> table_references</span><br><span class="line">    [<span class="keyword">WHERE</span> where_condition]</span><br></pre></td></tr></table></figure><h2 id="TRUNCATE-TABLE-语法"><a href="#TRUNCATE-TABLE-语法" class="headerlink" title="TRUNCATE TABLE 语法"></a>TRUNCATE TABLE 语法</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> [<span class="keyword">TABLE</span>] tbl_name</span><br></pre></td></tr></table></figure><h2 id="DELETE-和-TRUNCATE-TABLE-的区别"><a href="#DELETE-和-TRUNCATE-TABLE-的区别" class="headerlink" title="DELETE 和 TRUNCATE TABLE 的区别"></a><strong>DELETE</strong> 和 <strong>TRUNCATE TABLE</strong> 的区别</h2><p>现在我们了解了 <strong>DELETE</strong> 和 <strong>TRUNCATE TABLE</strong> 的共同点和语法后，现在我们来了解一下它们的区别。<br><strong>DELETE</strong> 和 <strong>TRUNCATE TABLE</strong> 的最大区别在于执行速度和是否可以条件删除。<br><strong>DELETE</strong> 可以通过 <strong>WHERE</strong> 条件来筛选需要删除的记录，且可以返回删除的记录数。<br><strong>TRUNCATE TABLE</strong> 不能条件筛选需要删除的记录，且不返回删除的记录数。<br><strong>TRUNCATE TABLE</strong> 的执行速度非常快，<strong>DELETE</strong> 的执行速度不是很快。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  工作中有这么一个业务场景，数据库里的数据需要定时全量删除。&lt;br&gt;  全量删除数据有两个选择，&lt;br&gt;  1：&lt;code&gt;DELETE FROM table_name&lt;/code&gt;&lt;br&gt;  2:&lt;code&gt;TRUNCATE TABLE table_name&lt;/code&gt;。&lt;br&gt;由于 &lt;strong&gt;TRUNCATE TABLE&lt;/strong&gt; 相当于不带 &lt;strong&gt;WHERE&lt;/strong&gt; 条件的 &lt;strong&gt;DELETE&lt;/strong&gt; 语句，那么不论是选择 &lt;strong&gt;DELETE&lt;/strong&gt; 还是选择 &lt;strong&gt;TRUNCATE TABLE&lt;/strong&gt; 好像都能达到我删除全量数据的目的。&lt;br&gt;
    
    </summary>
    
      <category term="Java 编程" scheme="http://blog.xueni.ren/categories/Java-%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="MySQL" scheme="http://blog.xueni.ren/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Spring 定时器的两种简单实现</title>
    <link href="http://blog.xueni.ren/2016/09/27/spring-task/"/>
    <id>http://blog.xueni.ren/2016/09/27/spring-task/</id>
    <published>2016-09-27T06:55:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间参与的项目，有一个定时作业来定时的拉取数据。最近得空整理一下我所了解的基于 Spring 的定时器的两种简单实现。</p><a id="more"></a><h2 id="Spring-定时任务基于-XML"><a href="#Spring-定时任务基于-XML" class="headerlink" title="Spring 定时任务基于 XML"></a>Spring 定时任务基于 XML</h2><p>Spring 定时任务基于 XML 的实现正是在我们项目中应用的。Spring3.0 以后自带的 task 大大的方便了我们的实现定时任务。</p><h3 id="定时任务类"><a href="#定时任务类" class="headerlink" title="定时任务类"></a>定时任务类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Task01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printJob</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"************定时打印---XML**************"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是一个普通的类，其中，<code>printJob()</code> 是我们需要定时执行的任务方法。</p><h3 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span> <span class="attr">xmlns:c</span>=<span class="string">"http://www.springframework.org/schema/c"</span> <span class="attr">xmlns:tool</span>=<span class="string">"http://www.springframework.org/schema/tool"</span> <span class="attr">xmlns:util</span>=<span class="string">"http://www.springframework.org/schema/util"</span> <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:jee</span>=<span class="string">"http://www.springframework.org/schema/jee"</span> <span class="attr">xmlns:lang</span>=<span class="string">"http://www.springframework.org/schema/lang"</span> <span class="attr">xmlns:task</span>=<span class="string">"http://www.springframework.org/schema/task"</span> <span class="attr">xmlns:cache</span>=<span class="string">"http://www.springframework.org/schema/cache"</span> <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span> <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span> <span class="attr">xmlns:jdbc</span>=<span class="string">"http://www.springframework.org/schema/jdbc"</span> <span class="attr">xmlns:jms</span>=<span class="string">"http://www.springframework.org/schema/jms"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tool</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tool/spring-tool.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/util</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/util/spring-util.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jee</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jee/spring-jee.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/lang</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/lang/spring-lang.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/task</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/task/spring-task.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/cache</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/cache/spring-cache.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jdbc</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jdbc/spring-jdbc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jms</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jms/spring-jms.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">task:annotation-driven</span> /&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!-- 定时任务（每隔5秒执行一次） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"Task01"</span> <span class="attr">class</span>=<span class="string">"com.apple.springmvc.task.Task01"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">task:scheduled-tasks</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">task:scheduled</span> <span class="attr">ref</span>=<span class="string">"Task01"</span> <span class="attr">method</span>=<span class="string">"printJob"</span> <span class="attr">cron</span>=<span class="string">"*/5 * * * * ?"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">task:scheduled-tasks</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 XML 里我们可以设置定时任务的执行频率或者执行时间，关于定时任务 <code>cron</code> 的语法可以参照我之前的一篇博客，<a href="http://blog.xueni.ren/2016/07/15/timer-grammar-xml/">定时器语法</a><br>来修改成符合成你业务需求的。</p><h2 id="Spring-定时任务基于注解"><a href="#Spring-定时任务基于注解" class="headerlink" title="Spring 定时任务基于注解"></a>Spring 定时任务基于注解</h2><p>因为用的 <code>Spring</code> 框架，其实基于注解来实现定时任务相对来说方便很多。</p><h3 id="定时任务类-1"><a href="#定时任务类-1" class="headerlink" title="定时任务类"></a>定时任务类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(<span class="string">"task"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Task02</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"*/7 * * * * ?"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printJob2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"************定时打印---注解**************"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们主要用到了两个注解 <code>@Component</code> 和 <code>@Scheduled</code> 。</p><h3 id="XML-1"><a href="#XML-1" class="headerlink" title="XML"></a>XML</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span> <span class="attr">xmlns:c</span>=<span class="string">"http://www.springframework.org/schema/c"</span> <span class="attr">xmlns:tool</span>=<span class="string">"http://www.springframework.org/schema/tool"</span> <span class="attr">xmlns:util</span>=<span class="string">"http://www.springframework.org/schema/util"</span> <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:jee</span>=<span class="string">"http://www.springframework.org/schema/jee"</span> <span class="attr">xmlns:lang</span>=<span class="string">"http://www.springframework.org/schema/lang"</span> <span class="attr">xmlns:task</span>=<span class="string">"http://www.springframework.org/schema/task"</span> <span class="attr">xmlns:cache</span>=<span class="string">"http://www.springframework.org/schema/cache"</span> <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span> <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span> <span class="attr">xmlns:jdbc</span>=<span class="string">"http://www.springframework.org/schema/jdbc"</span> <span class="attr">xmlns:jms</span>=<span class="string">"http://www.springframework.org/schema/jms"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tool</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tool/spring-tool.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/util</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/util/spring-util.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jee</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jee/spring-jee.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/lang</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/lang/spring-lang.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/task</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/task/spring-task.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/cache</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/cache/spring-cache.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jdbc</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jdbc/spring-jdbc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jms</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jms/spring-jms.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">task:annotation-driven</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.apple.springmvc.task"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上就是 <code>Spring-task</code> 的两种简单实现，因为代码很简单，就不做过多解释了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间参与的项目，有一个定时作业来定时的拉取数据。最近得空整理一下我所了解的基于 Spring 的定时器的两种简单实现。&lt;/p&gt;
    
    </summary>
    
      <category term="Java 编程" scheme="http://blog.xueni.ren/categories/Java-%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://blog.xueni.ren/tags/Java/"/>
    
      <category term="Spring" scheme="http://blog.xueni.ren/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>通过 HashMap 实现本地缓存</title>
    <link href="http://blog.xueni.ren/2016/09/22/custom-local-cache/"/>
    <id>http://blog.xueni.ren/2016/09/22/custom-local-cache/</id>
    <published>2016-09-22T12:30:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>  本地缓存在我们的工作中是比较常见的一种技术手段，不管是分布式缓存，还是本地缓存，或多或少我们都会使用到，本地缓存比较常用的数 Guava 缓存。<br>今天我们不聊 Guava，而是聊一聊怎样通过 HashMap 来实现一个本地缓存。</p><a id="more"></a><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>通过 HashMap 实现本地缓存相当简单，废话不多说，先上代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> UserCache &#123;</span><br><span class="line"></span><br><span class="line">instance;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 日志记录器</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> org.apache.logging.log4j.Logger log = org.apache.logging.log4j.LogManager.getLogger(UserCache.class);</span><br><span class="line"></span><br><span class="line">HashMap&lt;Integer, String&gt; UserMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">UserCache.instance.init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化缓存</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">log.info(<span class="string">"初始化 User 缓存初始化开始..."</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// web容器中获取上下文</span></span><br><span class="line">WebApplicationContext context = ContextLoader.getCurrentWebApplicationContext();</span><br><span class="line">IUserDao UserDao = (IUserDao) context.getBean(<span class="string">"UserDaoImpl"</span>);</span><br><span class="line"></span><br><span class="line">List&lt;User&gt; Users = UserDao.selectAll();</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (User User : Users) &#123;</span><br><span class="line">count++;</span><br><span class="line">UserMap.put(User.getUserId(), JSON.toJSONString(User));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Users.size() != count) &#123;</span><br><span class="line">log.error(<span class="string">"User 数据未完全加载！"</span>);</span><br><span class="line">&#125;</span><br><span class="line">log.info(<span class="string">"共计加载："</span> + count);</span><br><span class="line">log.info(<span class="string">"初始化 User 缓存初始化结束！"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> HashMap&lt;Integer, String&gt; <span class="title">getPhoneAttr</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> UserMap;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码是不是相当简单，聪明的你一定能看懂这段代码。那么，请聪明的你再猜猜，我是怎么刷新缓存的？对了，就是定时器，用定时器去定时的刷新缓存。<br>整个设计跟实现是不是都很简单啊？</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;  本地缓存在我们的工作中是比较常见的一种技术手段，不管是分布式缓存，还是本地缓存，或多或少我们都会使用到，本地缓存比较常用的数 Guava 缓存。&lt;br&gt;今天我们不聊 Guava，而是聊一聊怎样通过 HashMap 来实现一个本地缓存。&lt;/p&gt;
    
    </summary>
    
      <category term="Java 编程" scheme="http://blog.xueni.ren/categories/Java-%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://blog.xueni.ren/tags/Java/"/>
    
      <category term="HashMap" scheme="http://blog.xueni.ren/tags/HashMap/"/>
    
  </entry>
  
  <entry>
    <title>深入理解 Java 虚拟机 读书笔记</title>
    <link href="http://blog.xueni.ren/2016/08/09/JVM-read-notes/"/>
    <id>http://blog.xueni.ren/2016/08/09/JVM-read-notes/</id>
    <published>2016-08-09T15:15:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<p>在早之前，曾粗略的读过一次 《深入理解 Java 虚拟机》这边书，那时候，是在每天上下班路上在公交车上用 kindle 阅读。由于阅读体验并不怎么好，所以收获并<br>不大。由于同事极力推荐这本书，于是，果断入手了一本纸质版。这次通过这次阅读，收获不小。（看来，技术类的书还是要看纸质的，电子版阅读体验太差。）<br>废话少说，开始正题。</p><a id="more"></a><h3 id="Java-虚拟机"><a href="#Java-虚拟机" class="headerlink" title="Java 虚拟机"></a>Java 虚拟机</h3><p>Java 虚拟机简称 JVM.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在早之前，曾粗略的读过一次 《深入理解 Java 虚拟机》这边书，那时候，是在每天上下班路上在公交车上用 kindle 阅读。由于阅读体验并不怎么好，所以收获并&lt;br&gt;不大。由于同事极力推荐这本书，于是，果断入手了一本纸质版。这次通过这次阅读，收获不小。（看来，技术类的书还是要看纸质的，电子版阅读体验太差。）&lt;br&gt;废话少说，开始正题。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://blog.xueni.ren/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java" scheme="http://blog.xueni.ren/tags/Java/"/>
    
      <category term="JVM" scheme="http://blog.xueni.ren/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>定时器语法</title>
    <link href="http://blog.xueni.ren/2016/07/15/timer-grammar-xml/"/>
    <id>http://blog.xueni.ren/2016/07/15/timer-grammar-xml/</id>
    <published>2016-07-14T23:00:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<p>日常工作中我们经常会实现这样一些功能，比如定时删除或者下载文件等等。首先我们想到的就是通过一个定时器定时的帮助我们去干一些我们需要它们帮助我们做的事情。<br><a id="more"></a><br>下面我们就了解一下，一些常用的定时器语法。</p><table><thead><tr><th>字段</th><th>允许值</th><th>允许的特殊符号</th></tr></thead><tbody><tr><td>秒</td><td>0-59</td><td>- * /</td></tr><tr><td>分</td><td>0-59</td><td>- * /</td></tr><tr><td>小时</td><td>0-23</td><td>- * /</td></tr><tr><td>日期</td><td>1-31</td><td>- * ? / L W C</td></tr><tr><td>月份</td><td>1-12或者JAN-DEC</td><td>- * /</td></tr><tr><td>星期</td><td>1-7或者SUN-SAT</td><td>- * ? / L C #</td></tr><tr><td>年（可选）</td><td>留空，1970-2099</td><td>- * /</td></tr></tbody></table><h3 id="一些常用的示例："><a href="#一些常用的示例：" class="headerlink" title="一些常用的示例："></a>一些常用的示例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> &quot;0 0 12 * * ?&quot;每天中午12点触发</span><br><span class="line">&quot;0 15 10 ? * *&quot;每天上午10:15触发</span><br><span class="line">&quot;0 15 10 * * ?&quot;每天上午10:15触发</span><br><span class="line">&quot;0 15 10 * * ? * &quot;每天上午10:15触发</span><br><span class="line">&quot;0 15 10 * * ? 2005 &quot;2005年的每天上午10:15触发</span><br><span class="line">&quot;0 * 14 * * ? &quot;每天下午2点到2点59期间的每一分钟触发</span><br><span class="line">&quot;0 0/5 14 * * ? &quot;每天下午2点到2点55期间的每5分钟触发</span><br><span class="line">&quot;0 0/5 14,18 * * ? &quot;每天下午2点到2点55期间和下午6点到6点55期间的每5分钟触发</span><br><span class="line">&quot;0 0-5 14 * * ? &quot;每天下午2点到2点5分期间的每1分钟触发</span><br><span class="line">&quot;0 10,44 14 ? 3 WED &quot;每年三月的星期三的下午2:10和2:44分触发</span><br><span class="line">&quot;0 15 10 ? * MON-FRI &quot;周一至周五的上午10:15触发</span><br><span class="line">&quot;0 15 10 15 * ? &quot;每月15日上午10:15触发</span><br><span class="line">&quot;0 15 10 L * ? &quot;每月最后一日上午10:15触发</span><br><span class="line">&quot;0 15 10 ? * 6L &quot;每月最后一个星期五上午10:15触发</span><br><span class="line">&quot;0 15 10 ? * 6L 2002-2005&quot;2002年至2005年每月最后一个星期五上午10:15触发</span><br><span class="line">&quot;0 15 10 ? * 6#3 &quot;每月的第三个星期五上午10:15触发</span><br><span class="line"></span><br><span class="line">每隔5秒执行一次：*/5 * * * * ?</span><br><span class="line"> 每隔1分钟执行一次：0 */1 * * * ?</span><br><span class="line"> 每天23点执行一次：0 0 23 * * ?</span><br><span class="line"> 每天凌晨1点执行一次：0 0 1 * * ?</span><br><span class="line"> 每月1号凌晨1点执行一次：0 0 1 1 * ?</span><br><span class="line"> 每月最后一天23点执行一次：0 0 23 L * ?</span><br><span class="line"> 每周星期天凌晨1点实行一次：0 0 1 ? * L</span><br><span class="line"> 在26分、29分、33分执行一次：0 26,29,33 * * * ?</span><br><span class="line"> 每天的0点、13点、18点、21点都执行一次：0 0 0,13,18,21 * * ?</span><br></pre></td></tr></table></figure><img src="http://www.plantuml.com/plantuml/svg/SyfFqhLppCbCJbMmKiX8pSd91m00">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;日常工作中我们经常会实现这样一些功能，比如定时删除或者下载文件等等。首先我们想到的就是通过一个定时器定时的帮助我们去干一些我们需要它们帮助我们做的事情。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.xueni.ren/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="xml" scheme="http://blog.xueni.ren/tags/xml/"/>
    
      <category term="timer" scheme="http://blog.xueni.ren/tags/timer/"/>
    
  </entry>
  
  <entry>
    <title>Google Guava Cache 学习笔记</title>
    <link href="http://blog.xueni.ren/2016/06/15/google-guava/"/>
    <id>http://blog.xueni.ren/2016/06/15/google-guava/</id>
    <published>2016-06-14T16:00:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h2><p>缓存主要作用是就是预读取（预先读取将要载入的数据）、存储临时访问过的数据和对写入的数据进行暂时存放。</p><a id="more"></a><h2 id="比较常见的几种缓存"><a href="#比较常见的几种缓存" class="headerlink" title="比较常见的几种缓存"></a>比较常见的几种缓存</h2><ul><li>本地缓存</li><li>分布式缓存</li><li>数据库缓存</li><li>CPU 缓存</li><li>Http 缓存</li></ul><h2 id="Guava-Cache"><a href="#Guava-Cache" class="headerlink" title="Guava Cache"></a>Guava Cache</h2><p>Guava Cache 是一个全内存的本地缓存，它提供了线程安全的实现机制。使用缓存就意味着你要牺牲一部分内存空间。</p><h2 id="Guava-Cache-有两种创建方式"><a href="#Guava-Cache-有两种创建方式" class="headerlink" title="Guava Cache 有两种创建方式"></a>Guava Cache 有两种创建方式</h2><h3 id="CacheLoader"><a href="#CacheLoader" class="headerlink" title="CacheLoader"></a>CacheLoader</h3><p>LoadingCache 是附带 CacheLoader 构建而成的缓存实现，创建自己的 CacheLoader 通常只需要简单的实现 <code>V load(K key) throws Exception</code> 方法。<br>官网的范例如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">LoadingCache&lt;Key, Graph&gt; graphs = CacheBuilder.newBuilder()</span><br><span class="line">        .maximumSize(<span class="number">1000</span>)</span><br><span class="line">        .build(</span><br><span class="line">            <span class="keyword">new</span> CacheLoader&lt;Key, Graph&gt;() &#123;</span><br><span class="line">                <span class="function"><span class="keyword">public</span> Graph <span class="title">load</span><span class="params">(Key key)</span> <span class="keyword">throws</span> AnyException </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> createExpensiveGraph(key);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> graphs.get(key);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> OtherException(e.getCause());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参照官网的范例，我的测试代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> LoadingCache&lt;String,List&lt;User&gt;&gt; cache = <span class="keyword">null</span>;</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadCache</span><span class="params">()</span></span>&#123;</span><br><span class="line">        cache = CacheBuilder</span><br><span class="line">                .newBuilder()</span><br><span class="line">                .maximumSize(<span class="number">1000</span>)</span><br><span class="line">                .expireAfterAccess(<span class="number">2</span>, TimeUnit.SECONDS)</span><br><span class="line">                .build(<span class="keyword">new</span> CacheLoader&lt;String, List&lt;User&gt;&gt;() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">load</span><span class="params">(String key)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> userService.getAllUser();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">testLoadingCache</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">             System.out.println(cache.get(<span class="string">"user"</span>));</span><br><span class="line">             System.out.println(cache.get(<span class="string">"user"</span>));</span><br><span class="line">             Thread.sleep(<span class="number">5000</span>);<span class="comment">//这里主要是为了测试expireAfterAccess(2, TimeUnit.SECONDS)</span></span><br><span class="line">             System.out.println(cache.get(<span class="string">"user"</span>));</span><br><span class="line">             System.out.println(cache.get(<span class="string">"user"</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"---"</span>+e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>从 <code>LoadingCache</code> 查询的正规方式是试用 <code>get(k)</code> 方法。这个方法要么返回已经缓存的值，要么使用 <code>CacheLoader</code> 向缓存原子地加载新值。由于 <code>CacheLoader</code> 可能抛出异常，<code>LoadingCache.get(k)</code> 也声明为抛出 <code>ExecutionException</code> 异常。如果你定义的 <code>CacheLoader</code> 没有声明任何检查型异常，则可通过 <code>getUnchecked(k)</code> 查找缓存，但必须注意，一旦 <code>CacheLoader</code> 声明了检查异常，就可以不调用 <code>getUnchecked(k)</code>。<br>官网示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">LoadingCache&lt;Key, Graph&gt; graphs = CacheBuilder.newBuilder()</span><br><span class="line">        .expireAfterAccess(<span class="number">10</span>, TimeUnit.MINUTES)</span><br><span class="line">        .build(</span><br><span class="line">            <span class="keyword">new</span> CacheLoader&lt;Key, Graph&gt;() &#123;</span><br><span class="line">                <span class="function"><span class="keyword">public</span> Graph <span class="title">load</span><span class="params">(Key key)</span> </span>&#123; <span class="comment">// no checked exception</span></span><br><span class="line">                    <span class="keyword">return</span> createExpensiveGraph(key);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line"><span class="keyword">return</span> graphs.getUnchecked(key);</span><br></pre></td></tr></table></figure><h3 id="Callable"><a href="#Callable" class="headerlink" title="Callable"></a>Callable</h3><p>所有类型的 <code>Guava Cache</code> ，不管有没有自动加载功能，都支持 <code>get(K,Callable&lt;V&gt;)</code> 方法。这个方法返回缓存中相应的值，或者用给定的 <code>Callable</code> 运算并把结果加到缓存中。在整个加载方法完成前，缓存项相关的可观察状态都不会更改。这个方法简便第实现了模式 <strong>“如果有缓存则返回；否则运算、缓存、然后返回”</strong>。<br>官网示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Cache&lt;Key, Graph&gt; cache = CacheBuilder.newBuilder()</span><br><span class="line">        .maximumSize(<span class="number">1000</span>)</span><br><span class="line">        .build(); <span class="comment">// look Ma, no CacheLoader</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// If the key wasn't in the "easy to compute" group, we need to</span></span><br><span class="line">    <span class="comment">// do things the hard way.</span></span><br><span class="line">    cache.get(key, <span class="keyword">new</span> Callable&lt;Key, Graph&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Value <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> AnyException </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> doThingsTheHardWay(key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> OtherException(e.getCause());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参照官网的范例，我的测试代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Cache&lt;String,List&lt;User&gt;&gt; cache = <span class="keyword">null</span>;</span><br><span class="line">   <span class="keyword">private</span> List&lt;User&gt; users = <span class="keyword">null</span>;</span><br><span class="line">   <span class="meta">@Before</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">callableCache</span><span class="params">()</span></span>&#123;</span><br><span class="line">       cache = CacheBuilder.newBuilder().maximumSize(<span class="number">1000</span>).build();</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">               users = cache.get(<span class="string">"user"</span>, <span class="keyword">new</span> Callable&lt;List&lt;User&gt;&gt;() &#123;</span><br><span class="line">               <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">               <span class="keyword">return</span> userService.getAllUser();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCallableCache</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">"user value : "</span> + users);</span><br><span class="line">       System.out.println(<span class="string">"user value : "</span> + users);</span><br><span class="line">       System.out.println(<span class="string">"user value : "</span> + users);</span><br><span class="line">       System.out.println(<span class="string">"user value : "</span> + users);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>使用 <code>cache.put(key,value)</code> 方法可以直接向缓存中插入值，这回直接覆盖掉给定键之前映射的值。使用 <code>Cache.asMap()</code> 视图提供的任何方法也能修改缓存。但请注意，<code>asMap</code> 视图的任何方法都不能保证缓存项被院子地加载到缓存中。进一步说，<code>asMap</code> 视图的原子运算在 <strong>Guava Cache</strong> 的原子加载范畴之外，所以相比于 <code>Cache.asMap().putIfAbsent(K,V)</code>, <code>Cache.get(K,Callable&lt;K&gt;)</code> 应该总是优先使用。</p><h2 id="Cache-参数说明："><a href="#Cache-参数说明：" class="headerlink" title="Cache 参数说明："></a>Cache 参数说明：</h2><p>回收的参数：</p><h3 id="基于容量的回收-size-based-eviction"><a href="#基于容量的回收-size-based-eviction" class="headerlink" title="基于容量的回收(size-based eviction)"></a>基于容量的回收(size-based eviction)</h3><ul><li>CacheBuilder.maximumSize(long):如果要规定缓存项的数据不超过固定值，只需要设置该参数。缓存将尝试回收最近没有使用或总体上很少使用的缓存项。<em>警告：在缓存项的数目达到限定值之前，缓存就可能进行回收操作，通常来说，这种情况发生在缓存项的数目逼近限定值时。</em> </li><li>CacheBuilder.weigher(Weigher):不同的缓存项有不同的 “权重” (weights). 例如，如果你的缓存值，占据完全不同的内存空间可以设置该参数指定一个权重函数，并用 <code>CacheBuilder.maxumumWeigher(long)</code> 指定最大总重。</li><li>CacheBuilder.maxumumWeigher(long):指定权重最大总重。<em>在权重限定场景中，除了要注意回收也是在冲了逼近限定值时就进行了，还要知道重量是在缓存创建时计算的，因此要考虑重量计算的复杂度。</em></li></ul><h3 id="定时回收-Timed-Eviction"><a href="#定时回收-Timed-Eviction" class="headerlink" title="定时回收(Timed Eviction)"></a>定时回收(Timed Eviction)</h3><ul><li>expireAfterAccess(long, TimeUnit):缓存项在给定时间内没有被读/写访问，则回收。<em>请注意这种缓存的回收顺序和基于大小回收一样。</em></li><li>expireAfterWrite(long, TimeUnit):缓存项在给定时间内没有被写访问（创建或覆盖），则回收。<em>如果认为缓存数据总是在固定时候会变得陈旧不可用，这种回收方式是可取的。</em><h3 id="引用的回收-Reference-based-Eviction"><a href="#引用的回收-Reference-based-Eviction" class="headerlink" title="引用的回收(Reference-based Eviction)"></a>引用的回收(Reference-based Eviction)</h3>通过使用弱引用的键、或弱引用的值、或软引用的值，Guava Cache 可以把缓存设置为允许垃圾回收：</li><li>CacheBuilder.weakKeys():使用弱引用存储键，当键没有其它（强或软）引用时，缓存项可以被垃圾回收。因为垃圾回收仅依赖恒等式<code>（==）</code>，使用弱医用建的缓存用 <code>==</code> 而不是 <code>equals</code> 比较键。</li><li>CacheBuilder.weakValues():使用弱引用存储值。当值没有其它（强或软）引用是，缓存项可以被垃圾回收。因为垃圾回收仅依赖恒等式<code>（==）</code>而不是 <code>equals</code> 比较值。</li><li>CacheBuilder.softValues():使用软引用存储值。软引用只有在响应内存需要是，才按照全局最近最少使用的顺序回收。考虑到使用软引用的性能影响。我们通常建议使用更有性能预测性的缓存大小限定。使用软引用值的缓存同样用 <code>==</code> 而不是 <code>equals</code> 比较值。</li></ul><h3 id="显式清除"><a href="#显式清除" class="headerlink" title="显式清除"></a>显式清除</h3><p>任何时候，你都可以显式地清除缓存项，而不是等到它被回收：  </p><ul><li>Cache.invalidate(key):个别清除。</li><li>Cache.invalidateAll(keys):批量清除。</li><li>Cache.invalidateAll():清除所有缓存项。</li></ul><h3 id="移除监听器"><a href="#移除监听器" class="headerlink" title="移除监听器"></a>移除监听器</h3><ul><li>CacheBuilder.removalListener(RemovalListener):通过 <code>CacheBuilder.removalListener(RemovalListener)</code> 可以声明一个监听器，一边缓存项被移除是做一些额外操作。缓存项被移除是，<code>RemovalListener</code> 会获取移除通知 <code>RemovalNotification</code>,其中包含移除原因 <code>RemovalCause</code>、键和值。<em>请注意，RemovalListener 抛出的任何异常都会记录到日志后被丢弃 swallowed 。</em></li></ul><p><strong><a href="http://ifeve.com/google-guava-cachesexplained/" target="_blank" rel="noopener">参考资料</a></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;缓存&quot;&gt;&lt;a href=&quot;#缓存&quot; class=&quot;headerlink&quot; title=&quot;缓存&quot;&gt;&lt;/a&gt;缓存&lt;/h2&gt;&lt;p&gt;缓存主要作用是就是预读取（预先读取将要载入的数据）、存储临时访问过的数据和对写入的数据进行暂时存放。&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.xueni.ren/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java 编程" scheme="http://blog.xueni.ren/tags/Java-%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Guava" scheme="http://blog.xueni.ren/tags/Guava/"/>
    
      <category term="Cache" scheme="http://blog.xueni.ren/tags/Cache/"/>
    
  </entry>
  
  <entry>
    <title>BufferedReader.readLine() 的使用中遇到的问题</title>
    <link href="http://blog.xueni.ren/2016/06/13/BufferedReader-readLine/"/>
    <id>http://blog.xueni.ren/2016/06/13/BufferedReader-readLine/</id>
    <published>2016-06-13T14:15:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>遇到这么一个问题，需要从网络上下载图片到本地，单元测试一直停不下来，有次让单元测试跑起来之后，自己出去吃了个早饭回来发现<br>单元测试还没有跑完。然后跟断点发现程序阻塞在 <strong>readLine()</strong> 方法上了。</p><a id="more"></a><h2 id="BufferedReader"><a href="#BufferedReader" class="headerlink" title="BufferedReader"></a>BufferedReader</h2><p><strong>BufferedReader</strong> 是由 <strong>Reader</strong> 类扩展而来，提供通用的缓冲方式文本读取，而且提供了很实用的 <strong>readLine</strong> 方法，也就是今天<br>我要重点说的那个方法。<strong>BufferReader</strong> 的作用是为 <strong>Reader</strong> 提供缓冲功能。 <strong>readLine</strong> 方法一次读取一个文本行，从字符输入流中读取<br>文本，缓冲各个字符，从而提供字符、数组和行的高效读取。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">   BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(conn.getInputStream()));</span><br><span class="line">           String line = <span class="keyword">null</span>;</span><br><span class="line">           <span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">           System.out.println(¨---here¨);</span><br><span class="line">               sb.append(line);</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>然后程序就阻塞在了 <strong> while ((line = reader.readLine()) != null)</strong> 这一行。System.out.println(¨—here¨); 这一句始终没有打印。</p><p>那么，程序为什么会阻塞呢？那么我们就需要了解一下 <strong>readLine</strong> 这个<br>方法了。<br><strong>readLine</strong> 是一个阻塞方法，在没有读取到数据的时候并不会返回 <strong>null</strong> 。<strong>readLine</strong> 只有在数据流发生异常时才会返回null值。如果<br>不指定 <strong>buffer</strong> 大小，则<strong> readLine</strong> 的 <strong>buffer</strong> 默认大小是 <strong>8192</strong> 个字符。在没有达到buffer大小之前，只有遇到<strong>“/r”、”/n”、”/r/n”</strong>才会返回。<br>这个时候这个时候，我就在猜想到底是我的图片太小，不足 <strong>8192</strong> 个字符呢？还是说别的什么原因才导致 <strong>readLine</strong> 才没有一直返回。。<br>为了不让程序阻塞，可以设置超时时间，但是这个不是解决问题的最终办法。因为这个 url 上的图片通过浏览器是可以正常访问，且完全<br>可以通过浏览器下载到本地。断点一路跟来，最后锁定问题出在了这一句 <strong>conn.getInputStream()</strong> 因为 <strong>InputStream</strong> 流的原因，导致 <strong>readine</strong> 读不到数据才一直阻塞</p><p>InputStream 我是通过一下方式获取的。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HttpURLConnection conn = (HttpURLConnection) <span class="keyword">new</span> URL(picURL).openConnection();</span><br><span class="line">  conn.setRequestProperty(<span class="string">"Accept-Charset"</span>, <span class="string">"utf-8"</span>);</span><br><span class="line">  conn.setRequestProperty(<span class="string">"Content-Type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line"></span><br><span class="line">  conn.setConnectTimeout(timeout * <span class="number">1000</span>);</span><br><span class="line">  conn.setReadTimeout(timeout * <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> conn.getInputStream();</span><br></pre></td></tr></table></figure></p><p>看代码似乎没有什么问题，但是通过在控制台打印我发现来，<strong>conn.getContentEncoding()</strong> 的值为 <strong>null</strong> 和 <strong>gzip</strong> 的会导致 <strong>readLine</strong> 阻塞。这个时候问题就有两种解决方案了<br>一种是，在返回 <strong>InputStream</strong> 流的时候进行类型判断，还有一种方案就是换一种图片下载的方式。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>通过在网上查资料，大多数人都建议在使用socket之类的数据流时，要避免使用 <strong>readLine</strong>。</li><li><strong>conn.getInputStream()</strong> 有可能会获取到 gzip 流，我们可以通过 <strong>new GZIPInputStream(conn.getInputStream())</strong> 来解压我们的流。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;遇到这么一个问题，需要从网络上下载图片到本地，单元测试一直停不下来，有次让单元测试跑起来之后，自己出去吃了个早饭回来发现&lt;br&gt;单元测试还没有跑完。然后跟断点发现程序阻塞在 &lt;strong&gt;readLine()&lt;/strong&gt; 方法上了。&lt;/p&gt;
    
    </summary>
    
      <category term="Java 编程" scheme="http://blog.xueni.ren/categories/Java-%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://blog.xueni.ren/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC 整合Mongodb</title>
    <link href="http://blog.xueni.ren/2016/06/06/spring-data-mongodb/"/>
    <id>http://blog.xueni.ren/2016/06/06/spring-data-mongodb/</id>
    <published>2016-06-06T14:27:45.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>平时都在用 SpringMVC 进行开发，但是，基本上都是在用 SpringMVC+Mybatis+MySQL 进行开发。对于 Mongodb 只是听说过，<br>自己实际没有操作过，近期，在工作之余决定研究一下 Mongodb 。<br><a id="more"></a><br>那么，开始进入正题吧，此次我构建的项目是 SpringMVC+Mongodb+Maven ，有不对之处，还望指出。</p><p>作为一个 Maven 工程，我们还是先从 pom.xml 文件开始把,在 pom.xml 里配置我们的工程所依赖的 jar。<br>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.apple<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MongoDemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>MongoDemo Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 属性配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jdk.version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">jdk.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Spring4支持 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- spring-data-mongodb --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-mongodb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- mongodb 驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mongodb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mongo-java-driver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- WEB --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span> <span class="comment">&lt;!-- 编译需要而发布不需要的jar包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 阿里JSON包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- log4j2核心包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 单元测试 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 项目构建配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 资源  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 编译 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;jdk.version&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;jdk.version&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">showWarnings</span>&gt;</span>true<span class="tag">&lt;/<span class="name">showWarnings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optimize</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optimize</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 发布 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">warName</span>&gt;</span>/<span class="tag">&lt;/<span class="name">warName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接着就是web.xml 文件，有一点我们需要明确的就是， web.xml 文件并不是 web 工程所必须的，但是，一般情况下，我们都是以 web.xml 作为我们 web工程的<br>入口。<br>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span> <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">param-value</span>&gt;</span></span><br><span class="line">classpath:spring/applicationContext-dao.xml,</span><br><span class="line">classpath:spring/applicationContext-service.xml</span><br><span class="line"><span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.json<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.jsonp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/applicationContext-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.json<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.jsonp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.action<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">db.properties 文件</span><br><span class="line"></span><br><span class="line">```xml</span><br><span class="line"></span><br><span class="line">mongo.host=127.0.0.1</span><br><span class="line">mongo.port=27017</span><br><span class="line">mongo.username=</span><br><span class="line">mongo.password=</span><br><span class="line">mongo.database=test</span><br></pre></td></tr></table></figure><p>applicationContext-mvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span> <span class="attr">xmlns:c</span>=<span class="string">"http://www.springframework.org/schema/c"</span> <span class="attr">xmlns:tool</span>=<span class="string">"http://www.springframework.org/schema/tool"</span> <span class="attr">xmlns:util</span>=<span class="string">"http://www.springframework.org/schema/util"</span> <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:jee</span>=<span class="string">"http://www.springframework.org/schema/jee"</span> <span class="attr">xmlns:lang</span>=<span class="string">"http://www.springframework.org/schema/lang"</span> <span class="attr">xmlns:task</span>=<span class="string">"http://www.springframework.org/schema/task"</span> <span class="attr">xmlns:cache</span>=<span class="string">"http://www.springframework.org/schema/cache"</span> <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span> <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span> <span class="attr">xmlns:jdbc</span>=<span class="string">"http://www.springframework.org/schema/jdbc"</span> <span class="attr">xmlns:jms</span>=<span class="string">"http://www.springframework.org/schema/jms"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tool</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tool/spring-tool.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/util</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/util/spring-util.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jee</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jee/spring-jee.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/lang</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/lang/spring-lang.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/task</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/task/spring-task.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/cache</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/cache/spring-cache.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jdbc</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jdbc/spring-jdbc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jms</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jms/spring-jms.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 扫描包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.apple.mongo.controller"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 这个配置用于返回json或者jsonp,具体的序列化器可以自定义 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"false"</span>&gt;</span> <span class="comment">&lt;!-- 注意：不设置为false的话存在性能问题差1倍 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"web.converter.RestResponseMessageConverter"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"features"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:constant</span> <span class="attr">static-field</span>=<span class="string">"com.alibaba.fastjson.serializer.SerializerFeature.QuoteFieldNames"</span> /&gt;</span><span class="comment">&lt;!-- 输出key时是否使用双引号,默认为true --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:constant</span> <span class="attr">static-field</span>=<span class="string">"com.alibaba.fastjson.serializer.SerializerFeature.WriteMapNullValue"</span> /&gt;</span><span class="comment">&lt;!-- 是否输出值为null的字段,默认为false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:constant</span> <span class="attr">static-field</span>=<span class="string">"com.alibaba.fastjson.serializer.SerializerFeature.WriteEnumUsingToString"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:constant</span> <span class="attr">static-field</span>=<span class="string">"com.alibaba.fastjson.serializer.SerializerFeature.SkipTransientField"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:constant</span> <span class="attr">static-field</span>=<span class="string">"com.alibaba.fastjson.serializer.SerializerFeature.WriteDateUseDateFormat"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:constant</span> <span class="attr">static-field</span>=<span class="string">"com.alibaba.fastjson.serializer.SerializerFeature.DisableCheckSpecialChar"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射,解决@ResponseBody乱码问题, 需要在annotation-driven之前,否则乱码问题同样无法解决 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"messageConverters"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.StringHttpMessageConverter"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.MediaType"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">value</span>=<span class="string">"text"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"1"</span> <span class="attr">value</span>=<span class="string">"plain"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"2"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 视图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/pages/"</span> /&gt;</span><span class="comment">&lt;!-- 前缀路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span><span class="comment">&lt;!-- 后缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>applicationContext-dao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xmlns:task</span>=<span class="string">"http://www.springframework.org/schema/task"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xmlns:mongo</span>=<span class="string">"http://www.springframework.org/schema/data/mongo"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context-4.1.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/data/mongo</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/task</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/task/spring-task-4.1.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 提供该PropertyPlaceholderConfigurer bean支持把properties文件中的信息读取到XML配置文件的表达式中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:conf/db.properties"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 通过工厂Bean创建mongo连接实例,没有密码就把username和password属性删除了--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mongo:db-factory</span> <span class="attr">host</span>=<span class="string">"$&#123;mongo.host&#125;"</span> <span class="attr">port</span>=<span class="string">"$&#123;mongo.port&#125;"</span> <span class="attr">dbname</span>=<span class="string">"$&#123;mongo.database&#125;"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- mongo模板操作对象 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"mongoTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.data.mongodb.core.MongoTemplate"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"mongoDbFactory"</span> <span class="attr">ref</span>=<span class="string">"mongoDbFactory"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- MongoDB GridFS Template 支持，操作mongodb存放的文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mongo:mapping-converter</span> <span class="attr">id</span>=<span class="string">"converter"</span> <span class="attr">db-factory-ref</span>=<span class="string">"mongoDbFactory"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"gridFsTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.data.mongodb.gridfs.GridFsTemplate"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">"mongoDbFactory"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">"converter"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 使用annotation定义事务</span></span><br><span class="line"><span class="comment">&lt;tx:annotation-driven transaction-manager="transactionManager" /&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 扫描实现 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.apple.mongo.dao.impl"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>applicationContext-service.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:c</span>=<span class="string">"http://www.springframework.org/schema/c"</span> <span class="attr">xmlns:tool</span>=<span class="string">"http://www.springframework.org/schema/tool"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:util</span>=<span class="string">"http://www.springframework.org/schema/util"</span> <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:jee</span>=<span class="string">"http://www.springframework.org/schema/jee"</span> <span class="attr">xmlns:lang</span>=<span class="string">"http://www.springframework.org/schema/lang"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:task</span>=<span class="string">"http://www.springframework.org/schema/task"</span> <span class="attr">xmlns:cache</span>=<span class="string">"http://www.springframework.org/schema/cache"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span> <span class="attr">xmlns:jdbc</span>=<span class="string">"http://www.springframework.org/schema/jdbc"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:jms</span>=<span class="string">"http://www.springframework.org/schema/jms"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/beans   </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/tool</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/tool/spring-tool.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/util</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/util/spring-util.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/context  </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/jee</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/jee/spring-jee.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/lang</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/lang/spring-lang.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/task</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/task/spring-task.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/cache</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/cache/spring-cache.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/aop/spring-aop.xsd  </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/tx   </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/tx/spring-tx.xsd  </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/mvc </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/jdbc </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/jms </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/jms/spring-jms.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    "</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 该配置文件主要针对service层(服务层)做配置 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.apple.mongo.service"</span> <span class="attr">resource-pattern</span>=<span class="string">"**/*ServiceImpl.class"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;平时都在用 SpringMVC 进行开发，但是，基本上都是在用 SpringMVC+Mybatis+MySQL 进行开发。对于 Mongodb 只是听说过，&lt;br&gt;自己实际没有操作过，近期，在工作之余决定研究一下 Mongodb 。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.xueni.ren/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SpringMVC" scheme="http://blog.xueni.ren/tags/SpringMVC/"/>
    
      <category term="整合Mongod" scheme="http://blog.xueni.ren/tags/%E6%95%B4%E5%90%88Mongod/"/>
    
  </entry>
  
  <entry>
    <title>Java 并发编程读书笔记(基础篇)</title>
    <link href="http://blog.xueni.ren/2016/06/01/Java-compli-read-notes-basis/"/>
    <id>http://blog.xueni.ren/2016/06/01/Java-compli-read-notes-basis/</id>
    <published>2016-06-01T15:15:45.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础篇，从各种概念开始。"><a href="#基础篇，从各种概念开始。" class="headerlink" title="基础篇，从各种概念开始。"></a>基础篇，从各种概念开始。</h1><h2 id="线程安全"><a href="#线程安全" class="headerlink" title="线程安全"></a>线程安全</h2><ul><li>当多个线程访问某个类时，不管运行时环境采用何种调度方式或者这些线程将如何交替执行，并且在主调代码中不需要任何额外的同步货协同，这个类都能表现出正确的行为，那么就称这个类是线程安全的。<a id="more"></a></li><li>在线程安全类中封装来必要的同步机制，因此客户端无须进一步采取同步措施。</li><li>无状态对象一定是线程安全的。<br>在并发编程中，这种由于不恰当的执行时序而出现的不正确的结果是一种非常重要的情况，它有一个正式的名字：<strong>竞态条件</strong>。</li></ul><h2 id="原子操作"><a href="#原子操作" class="headerlink" title="原子操作"></a>原子操作</h2><p>作为一个不可分割的操作来执行。我们所熟知的 <strong>++i</strong> 并不是一个原子操作，它实际上是一个 *<em>¨读取 i 值 – 修改 i 值 – 写入 i 值¨</em> 的操作序列，并且其结果依赖于之前的状态。</p><h2 id="内置锁"><a href="#内置锁" class="headerlink" title="内置锁"></a>内置锁</h2><p>每个 Java 对象都可以用做一个实现同步的锁，这些锁被称为内置锁(Inteinsic Lock)或者监视器锁(Monitor Lock)。获得内置锁的唯一途径就是进入由这个锁保护的同步代码块或方法。Java 的内置锁相当于一种互斥体(互斥锁)，这意味着最多只有一个线程能持有这种锁。</p><h2 id="重入"><a href="#重入" class="headerlink" title="重入"></a>重入</h2><p>当某个线程请求一个由其他线程持有的锁是，发出请求的线程就会阻塞。¨重入¨ 意味着获取锁的操作的粒度是¨线程¨，而不是¨调用¨。重入的一种实现方法是，为每个锁关联一个获取计数值和一个所有者线程。</p><h2 id="Volatile-关键字"><a href="#Volatile-关键字" class="headerlink" title="Volatile 关键字"></a>Volatile 关键字</h2><p>Java 语言提供来一种弱同步机制，即 volatile 变量，用来确保变量的更新操作通知到其他线程。<br>仅当 volatile 变量能简化代码的实现以及对同步策略的验证时，才应该使用它们。如果在验证正确性时需要对可见性进行复杂的判断，那么就不要使用 volatile 变量。volatile 变量的正确使用方式包括：确保它们自身状态的可见性，确保它们锁引用对象的状态的可见性，以及标识一些重要的程序生命周期事件的发生。</p><h2 id="发布与逸出"><a href="#发布与逸出" class="headerlink" title="发布与逸出"></a>发布与逸出</h2><p>发布一个对象的意思是指，使对象能够在当前作用域之外的代码中使用。一般来说，如果一个已经发布的对象能够通过非私有的变量引用和方法调用到达其他对象，那么这些对象也都会被发布。<br>当某个不应该发布的对象被发布时，就称为逸出。</p><h2 id="线程封闭"><a href="#线程封闭" class="headerlink" title="线程封闭"></a>线程封闭</h2><p>线程封闭的对象只能由一个线程拥有，对象被封闭在该线程中，并且只能由该线程修改。</p><h3 id="Ad-hoc-线程封闭"><a href="#Ad-hoc-线程封闭" class="headerlink" title="Ad-hoc 线程封闭"></a>Ad-hoc 线程封闭</h3><p>Ad-hoc 线程封闭是指，维护线程封闭性的职责完全由程序实现来承担。</p><h3 id="栈封闭"><a href="#栈封闭" class="headerlink" title="栈封闭"></a>栈封闭</h3><p>栈封闭是线程封闭的一种特例，在栈封闭中，只能通过局部变量才能访问对象。栈封闭比 Ad-hoc 线程封闭更易于维护，也更健壮。</p><h3 id="ThreadLocal-类"><a href="#ThreadLocal-类" class="headerlink" title="ThreadLocal 类"></a>ThreadLocal 类</h3><p>维持线程封闭性的一种更规范方法是使用 ThreadLocal，这个类能使线程中的某个值与保存值的对象关联起来。ThreadLocal 对象通常用于防止对可变的单实例变量或全局变量进行共享。</p><h2 id="不变性"><a href="#不变性" class="headerlink" title="不变性"></a>不变性</h2><p>如果某个对象在被创建后其状态就不能被修改，那么这个对象就称为不可变对象。<br><strong>不可变对象一定是线程安全的</strong>。</p><p>当满足一下条件时，对象才是不可变的：</p><ul><li>对象创建以后其状态就不能被修改。</li><li>对象的所有域都是 final 类型。</li><li>对象是正确创建的(在对象创建期间，this 引用没有逸出)。</li></ul><h3 id="Final-域"><a href="#Final-域" class="headerlink" title="Final 域"></a>Final 域</h3><p>final 域能确保初始化过程的安全性，从而可以不受限制的访问不可变对象，并在共享这些对象时无须同步。</p><p>要安全地发布一个对象，对象的引用以及对象的状态必须同事对其他线程可见。一个正确构造的对象可以通过以下方式来安全地发布：</p><ul><li>在静态初始化函数中初始化一个对象引用。</li><li>将对象的引用保存到 olatile 类型的域或者 AtomicReferance 对象中。</li><li>将对象的引用保存到某个正确构造对象的 final 类型域中。</li><li>将对象的引用保存到一个由锁保护的域中。</li></ul><p>线程安全库中的容器类提供以下安全发布保证：</p><ul><li>通过将一个键或者值放入 Hashtable、sychronziedMap 或者 ConcurrentMap 中，可以安全地将它发布给任何从这些容器中访问它的线程（无论是直接访问还是通过迭代器访问）。</li><li>通过将某个元素放入 Vector、CopyOnWriteArrayList、CopyWriteArraySet、synchronizedist 或 synchroizedSet 中，可以将该元素安全地发布到任何从这些容器中访问该元素的线程。</li><li>通过将某个元素放入 BlockingQueue 或者 ConcurrentLinkedQueue 中，可以将该元素安全地发布到任何从这些队列中访问该元素的线程。</li></ul><p>对象的发布需求取决于它的可变性：</p><ul><li>不可变对象可以通过任意机制来发布。</li><li>事实不可变对象必须通过安全方式来发布。</li><li>可变对象必须通过安全方式来发布，并且必须是线程安全的或者由某个锁保护起来。</li></ul><p>在并发程序中使用和共享对象时，可以使用一些实用的策略，包括：<br><strong>线封闭</strong> 线程封闭的对象只能由一个线程拥有，对象被封闭在该线程中，并且只能由这个线程修改。<br><strong>只读共享</strong> 在没有额外同步的情况下，共享的只对对象可以由多个线程并发访问，但任何线程都不能修改它。共享只读对象包括不可变对象和事实不可变对象。<br><strong>线程安全共享</strong> 线程安全的对象在其内部实现同步，因此多个线程可以通过对象的公有接口来进行访问而不需要进一步的同步。<br><strong>保护对象</strong> 被保护的对象只能通过持有特定的锁来访问。保护对象包括封装在其他线程安全对象中的对象，以及已发布的并且有某个特定锁保护的对象。</p><p>在设计线程安全类的过程中，需要包含一下三个基本要素：</p><ul><li>找出构成对象状态的所有变量。</li><li>找出约束状态变量的不变性条件。</li><li>建立对象状态的并发访问管理策略。</li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li>可变状态是至关重要的。<br>所有的并发问题都可以归结为如何协调对并发状态的访问。可变状态越少，就越容易确保线程的安全性。</li><li>尽量将域声明为 final 类型，除非需要它们是可变的。</li><li>不可变对象一定是线程阿安全的。<br>不可变对象能极大地降低并发编程到的复杂性。它们更为简单而且安全，可以任意共享而无须使用加锁或保护性复制等机制。</li><li>封装有助于管理复杂性。<br>将数据封装在对象中，更易于维持不变性条件，将同步机制封装在对象中，更易于遵循同步策略。</li><li>用锁来保护每个可变变量。</li><li>当保护用一个不变性条件中的所有变量时，要使用同一个锁。</li><li>在执行符合操作期间，要持有锁。</li><li>如果从多线程中访问同一个可变变量时没有同步机制，那么程序会出现问题。</li><li>不要故作聪明地推断出不需要使用同步。</li><li>在设计过程中考虑线程安全，或者文档中明确指出它不是线程安全的。</li><li>将同步策略文档化。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础篇，从各种概念开始。&quot;&gt;&lt;a href=&quot;#基础篇，从各种概念开始。&quot; class=&quot;headerlink&quot; title=&quot;基础篇，从各种概念开始。&quot;&gt;&lt;/a&gt;基础篇，从各种概念开始。&lt;/h1&gt;&lt;h2 id=&quot;线程安全&quot;&gt;&lt;a href=&quot;#线程安全&quot; class=&quot;headerlink&quot; title=&quot;线程安全&quot;&gt;&lt;/a&gt;线程安全&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;当多个线程访问某个类时，不管运行时环境采用何种调度方式或者这些线程将如何交替执行，并且在主调代码中不需要任何额外的同步货协同，这个类都能表现出正确的行为，那么就称这个类是线程安全的。
    
    </summary>
    
      <category term="读书笔记" scheme="http://blog.xueni.ren/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java" scheme="http://blog.xueni.ren/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 入库操作的优化</title>
    <link href="http://blog.xueni.ren/2016/06/01/MySQL-batch-insert/"/>
    <id>http://blog.xueni.ren/2016/06/01/MySQL-batch-insert/</id>
    <published>2016-06-01T14:22:22.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<p>最近开始玩 <strong>MyBatis</strong> ，想实现这么一个功能，就是将一张表里的数据作为历史数据存储到另一张表里去。<br>一开始我的代码是这么写的：</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;BookHistory&gt; bookHistories = bookHisDao.getBookList();<span class="comment">//获取需要存储的历史数据</span></span><br><span class="line"><span class="keyword">for</span> (BookHistory BookHistory:bookHistories) &#123;</span><br><span class="line">BookHistory book = bookHisDao.selectBookById(BookHistory);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">null</span> == book)&#123;</span><br><span class="line">bookHisDao.insertBook(bookHistory);<span class="comment">// 数据入库操作</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看起来简单粗暴，似乎没有什么问题，查询出来一个<code>list</code>，然后循环遍历，检查是否已经存在历史库中，如果不存在则入库。功能也正确实现，但是，存在的问题是，速度有点太慢。<code>2007</code> 条数据的执行时间是 <code>2m 1s 505ms</code> 。对于追求完美的我，这是不能忍受的，首先我能想到的就是优化入库操作，因为一条数据一条数据的插入，确实会速度特别慢，说干就干，首先先将入库操作由原来的一条一条入库改成批量入库。接下来我的代码变成了这样：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">List&lt;BookHistory&gt; bookHistories = bookHisDao.getBookList();</span><br><span class="line">Iterator&lt;BookHistory&gt; bookIter= bookHistories.iterator();</span><br><span class="line"><span class="keyword">while</span> (bookIter.hasNext())&#123;</span><br><span class="line">BookHistory bookHistory = bookIter.next();</span><br><span class="line">BookHistory book = bookHisDao.selectBookById(bookHistory);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">null</span> != book)&#123;</span><br><span class="line">bookIter.remove();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> count = bookHisDao.insertBookBatch(bookHistories);<span class="comment">//批量入库操作</span></span><br><span class="line">System.out.println(<span class="string">"insert "</span>+count+<span class="string">" records"</span>);</span><br></pre></td></tr></table></figure><p>改成批量入库操作后，速度直线上升，<code>2007</code>条数据的执行时间是 <code>6s 737ms</code> ，现在看来，情况很乐观，但是随之而来的又出来了另一个问题，因为做测试，我并没有将所有字段都进行入库操作。    当我把字段补齐时，控制台报了这样一个错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.dao.TransientDataAccessResourceException: </span><br><span class="line">### Error updating database.  Cause: com.mysql.jdbc.PacketTooBigException: Packet for query is too large (13513737 &gt; 4194304). You can change this value on the server by setting the max_allowed_packet&apos; variable.</span><br><span class="line">### The error may involve BookHistory.insertBookBatch-Inline</span><br></pre></td></tr></table></figure><p>看到控制台提到了  <strong>max_allowed_packet</strong> 这个参数，那么我们就需要了解一下，这个参数是干什么用的。<strong>max_allowed_packet</strong> 是 <strong>MySQL</strong> 变量的一个变量，用于控制其通信缓冲区的最大长度。默认值是：<code>4194304</code>.从控制台的报错信息可以看出来，我此时需要的缓冲区长度为：<code>13513737</code>，远大于<code>4194304</code>。最简单粗暴的办法就是修改 <strong>MySQL</strong> 的 <strong>max_allowed_packet</strong> 参数。修改这个参数，可以暂时的解决问题，但是不能长久的解决问题，因为我无法保证线上的数据量会是多大。这时候，我需要寻找别的突破点。既然<code>2007</code>条数据同时入库，会导致 <strong>MySQL</strong> 的缓冲区不够用，那么，我是否可以改一下自己的程序，不让数据一次性都插入，而是，分批插入，比如说每次 <code>500</code> 条数据呢？接下来，我又对我的代码做了如下修改：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">List&lt;BookHistory&gt; bookHistories = bookHisDao.getBookList();</span><br><span class="line">Iterator&lt;BookHistory&gt; bookIter= bookHistories.iterator();</span><br><span class="line"><span class="keyword">while</span> (bookIter.hasNext())&#123;</span><br><span class="line">BookHistory bookHistory = bookIter.next();</span><br><span class="line">BookHistory book = bookHisDao.selectBookById(bookHistory);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">null</span> != book)&#123;</span><br><span class="line">bookIter.remove();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//int count = bookHisDao.insertBookBatch(bookHistories);//批量入库操作</span></span><br><span class="line"><span class="comment">//System.out.println("insert "+count+" records");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//分批，批量入库操作</span></span><br><span class="line"><span class="keyword">int</span> batch = <span class="number">0</span>;</span><br><span class="line">List&lt;BookHistory&gt;  bookList = <span class="keyword">new</span> ArrayList&lt;BookHistory&gt;();</span><br><span class="line"><span class="keyword">for</span> (BookHistory bookHistory:bookHistories)&#123;</span><br><span class="line">batch++;</span><br><span class="line">bookList.add(bookHistory);</span><br><span class="line">System.out.println(batch);</span><br><span class="line"><span class="keyword">if</span> (batch == <span class="number">500</span>)&#123;</span><br><span class="line">bookHisDao.insertBookBatch(bookList);</span><br><span class="line">System.out.println(bookList.size());</span><br><span class="line">batch = <span class="number">0</span>;</span><br><span class="line">bookList.clear();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">bookHisDao.insertBookBatch(bookList);</span><br></pre></td></tr></table></figure><p>这样一修改之后，控制台的错误消失，程序的运行速度是 <code>8s 393ms</code> 。比刚才的 一次性批量入库慢了 <code>2s</code> 。。。暂时还没有想到更好的解决方案，先这样，我再想想还有么有更好的解决方案。<br>以上的修改，虽然解决了问题，但是代码不够优雅。</p><p>最后，我们需要思考的问题是，为什么 <strong>MySQL</strong> 入库，批量入库比一条一条的数据入库性能好很多？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近开始玩 &lt;strong&gt;MyBatis&lt;/strong&gt; ，想实现这么一个功能，就是将一张表里的数据作为历史数据存储到另一张表里去。&lt;br&gt;一开始我的代码是这么写的：&lt;/p&gt;
    
    </summary>
    
      <category term="Java 编程" scheme="http://blog.xueni.ren/categories/Java-%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="MySQL" scheme="http://blog.xueni.ren/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://blog.xueni.ren/2015/11/19/test/"/>
    <id>http://blog.xueni.ren/2015/11/19/test/</id>
    <published>2015-11-18T16:00:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://help.github.com/articles/basic-writing-and-formatting-syntax/" target="_blank" rel="noopener">md语法</a></p><a id="more"></a><h1 id="This-is-an-h1-tag"><a href="#This-is-an-h1-tag" class="headerlink" title="This is an h1 tag"></a>This is an h1 tag</h1><h2 id="This-is-an-h2-tag"><a href="#This-is-an-h2-tag" class="headerlink" title="This is an h2 tag"></a>This is an h2 tag</h2><h6 id="This-is-an-h6-tag"><a href="#This-is-an-h6-tag" class="headerlink" title="This is an h6 tag"></a>This is an h6 tag</h6><p><em>This text will be italic</em><br><em>This will also be italic</em></p><p><strong>This text will be bold</strong><br><strong>This will also be bold</strong></p><p><em>You <strong>can</strong> combine them</em></p><ul><li>Item 1</li><li>Item 2<ul><li>Item 2a</li><li>Item 2b</li></ul></li></ul><ol><li>Item 1</li><li>Item 2</li><li>Item 3<ul><li>Item 3a</li><li>Item 3b</li></ul></li></ol><p>As Kanye West said:</p><blockquote><p>We’re living the future so<br>the present is our past.</p></blockquote><p>I think you should use an<br><code>&lt;addr&gt;</code> element here instead.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fancyAlert</span>(<span class="params">arg</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(arg) &#123;</span><br><span class="line">    $.facebox(&#123;<span class="attr">div</span>:<span class="string">'#foo'</span>&#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>[x] @mentions, #refs, <a href="">links</a>, <strong>formatting</strong>, and <del>tags</del> supported</li><li>[x] list syntax required (any unordered or ordered list supported)</li><li>[x] this is a complete item</li><li>[ ] this is an incomplete item</li></ul><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content from cell 1</td><td>Content from cell 2</td></tr><tr><td>Content in the first column</td><td>Content in the second column</td></tr></tbody></table><p>@octocat :+1: This PR looks great - it’s ready to merge! :shipit:</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/basic-writing-and-formatting-syntax/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;md语法&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="categories" scheme="http://blog.xueni.ren/categories/categories/"/>
    
    
      <category term="test" scheme="http://blog.xueni.ren/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>发布pelican博客</title>
    <link href="http://blog.xueni.ren/2015/04/01/pelican-blog/"/>
    <id>http://blog.xueni.ren/2015/04/01/pelican-blog/</id>
    <published>2015-03-31T16:00:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<p>没有前言，没有概述，做个笔记而已。</p><ol><li>在<code>content</code>目录里新建 <code>.py</code> 文件，写完之后执行<code>pelican content</code>，生成页面。</li><li><code>cd</code> 到<code>output</code>里 执行<code>python -m pelican.server</code>。</li><li><code>localhost:8000</code> 查看效果。</li><li><code>cd</code>到<code>blog</code>的根目录，执行 <code>sh push_to.sh</code>。</li><li>最后，记得也要把<code>blog</code>的<code>content</code>也<code>push</code>到<code>github</code>上。</li></ol>]]></content>
    
    <summary type="html">
    
      记录发布python pelican博客的发布方法
    
    </summary>
    
      <category term="pelican" scheme="http://blog.xueni.ren/categories/pelican/"/>
    
      <category term="python" scheme="http://blog.xueni.ren/categories/pelican/python/"/>
    
    
      <category term="blog" scheme="http://blog.xueni.ren/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.xueni.ren/2014/11/19/hello-world/"/>
    <id>http://blog.xueni.ren/2014/11/19/hello-world/</id>
    <published>2014-11-18T16:00:00.000Z</published>
    <updated>2018-12-09T07:08:41.668Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://blog.xueni.ren/categories/hexo/"/>
    
    
      <category term="hello" scheme="http://blog.xueni.ren/tags/hello/"/>
    
  </entry>
  
</feed>
