{"meta":{"title":"Apple","subtitle":null,"description":null,"author":"Apple","url":"http://blog.xueni.ren"},"pages":[{"title":"about","date":"2016-05-31T04:34:20.000Z","updated":"2016-06-02T00:08:50.104Z","comments":true,"path":"about/index.html","permalink":"http://blog.xueni.ren/about/index.html","excerpt":"","keywords":null,"text":"Apple","raw":null,"content":null},{"title":"tags","date":"2016-05-31T04:35:48.000Z","updated":"2016-06-02T00:08:50.104Z","comments":true,"path":"tags/index.html","permalink":"http://blog.xueni.ren/tags/index.html","excerpt":"","keywords":null,"text":"","raw":null,"content":null}],"posts":[{"title":"Java 并发编程读书笔记(基础篇)","slug":"Java-compli-read-notes-basis","date":"2016-06-01T15:15:45.000Z","updated":"2016-06-02T00:08:50.104Z","comments":true,"path":"2016/06/01/Java-compli-read-notes-basis/","link":"","permalink":"http://blog.xueni.ren/2016/06/01/Java-compli-read-notes-basis/","excerpt":"","keywords":null,"text":"基础篇，从各种概念开始。 所谓线程安全： -当多个线程访问某个类时，不管运行时环境采用何种调度方式或者这些线程将如何交替执行，并且在主调代码中不需要任何额外的同步货协同，这个类都能表现出正确的行为，那么就称这个类是线程安全的。 -在线程安全类中封装来必要的同步机制，因此客户端无须进一步采取同步措施。 -无状态对象一定是线程安全的。 在并发编程中，这种由于不恰当的执行时序而出现的不正确的结果是一种非常重要的情况，它有一个正式的名字：竞态条件。 原子操作：作为一个不可分割的操作来执行。我们所熟知的 ++i 并不是一个原子操作，它实际上是一个 ¨读取 i 值 – 修改 i 值 – 写入 i 值¨ 的操作序列，并且其结果依赖于之前的状态。","raw":null,"content":null,"categories":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://blog.xueni.ren/categories/读书笔记/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://blog.xueni.ren/tags/Java/"}]},{"title":"MySQL","slug":"MySQL-batch-insert","date":"2016-06-01T14:22:22.000Z","updated":"2016-06-02T00:08:50.104Z","comments":true,"path":"2016/06/01/MySQL-batch-insert/","link":"","permalink":"http://blog.xueni.ren/2016/06/01/MySQL-batch-insert/","excerpt":"","keywords":null,"text":"MySQL 优化","raw":null,"content":null,"categories":[{"name":"Java 编程","slug":"Java-编程","permalink":"http://blog.xueni.ren/categories/Java-编程/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://blog.xueni.ren/tags/MySQL/"}]},{"title":"test","slug":"test","date":"2015-11-18T16:00:00.000Z","updated":"2016-06-02T00:08:50.104Z","comments":true,"path":"2015/11/19/test/","link":"","permalink":"http://blog.xueni.ren/2015/11/19/test/","excerpt":"","keywords":null,"text":"md语法 This is an tagThis is an tagThis is an tagThis text will be italicThis will also be italic This text will be boldThis will also be bold You can combine them Item 1 Item 2 Item 2a Item 2b Item 1 Item 2 Item 3 Item 3a Item 3b As Kanye West said: We’re living the future sothe present is our past. I think you should use an&lt;addr&gt; element here instead. 12345function fancyAlert(arg) &#123; if(arg) &#123; $.facebox(&#123;div:'#foo'&#125;) &#125;&#125; [x] @mentions, #refs, links, formatting, and tags supported [x] list syntax required (any unordered or ordered list supported) [x] this is a complete item [ ] this is an incomplete item First Header Second Header Content from cell 1 Content from cell 2 Content in the first column Content in the second column @octocat :+1: This PR looks great - it’s ready to merge! :shipit:","raw":null,"content":null,"categories":[{"name":"categories","slug":"categories","permalink":"http://blog.xueni.ren/categories/categories/"}],"tags":[{"name":"test","slug":"test","permalink":"http://blog.xueni.ren/tags/test/"}]},{"title":"发布pelican博客","slug":"pelican-blog","date":"2015-03-31T16:00:00.000Z","updated":"2016-06-02T00:08:50.104Z","comments":true,"path":"2015/04/01/pelican-blog/","link":"","permalink":"http://blog.xueni.ren/2015/04/01/pelican-blog/","excerpt":"","keywords":null,"text":"没有前言，没有概述，做个笔记而已。 在content目录里新建 .py 文件，写完之后执行pelican content，生成页面。 cd 到output里 执行python -m pelican.server。 localhost:8000 查看效果。 cd到blog的根目录，执行 sh push_to.sh。 最后，记得也要把blog的content也push到github上。","raw":null,"content":null,"categories":[{"name":"pelican","slug":"pelican","permalink":"http://blog.xueni.ren/categories/pelican/"},{"name":"python","slug":"pelican/python","permalink":"http://blog.xueni.ren/categories/pelican/python/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://blog.xueni.ren/tags/blog/"}]},{"title":"Hello World","slug":"hello-world","date":"2014-11-18T16:00:00.000Z","updated":"2016-06-02T00:08:50.104Z","comments":true,"path":"2014/11/19/hello-world/","link":"","permalink":"http://blog.xueni.ren/2014/11/19/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","keywords":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","raw":null,"content":null,"categories":[{"name":"hexo","slug":"hexo","permalink":"http://blog.xueni.ren/categories/hexo/"}],"tags":[{"name":"hello","slug":"hello","permalink":"http://blog.xueni.ren/tags/hello/"}]}]}